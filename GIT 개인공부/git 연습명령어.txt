폴더를 우클릭해서 Git Bash Here 를 클릭하고 실행된 터미널창에
명령어들
---------------------------------------
git init
> 해당 파일 경로를  깃이 항시 관찰할 수있게 지정하는 명령어, 버전관리를 하기 위한 준비
해당 경로에 버전관리를 할 작업물들을 보관하면됨

git status
> 변경된 사항이 있는지 확인 하는 명령어

git add .
> 경로에 있는 작업물의 모든 수정사항을 Staging Area 에 등록시키는 명령어
git add 작업물파일명.확장자명
> 작업물을 지정하여 1개만  수정사항을 Staging Area 에 등록시키는 명령어

git commit -m "버전 이름"
> Staging Area 등록된 수정사항을 버전으로 만들어버리는 명령어

git  log
> 그동안의 버전을 진행한 기록을 볼수 있는 명령어

git commit -am "버전이름"
> add 와 commit 을 한방에 하는 명령어

git checkout 버전번호
> 버전을 완료 했었던 과거로 돌아가는 명령어
버전번호는 git log 명령어를 사용하면 버전 별로 번호가 나옴

git checkout master
> 가장최근에 완료했던 버전으로 다시 돌아가는 명령어

git push origin master
> 깃허브로 ocmmit완료된 사항 push(보내기) 명령어

git pull


git colne 복사한URL
> github에 오픈되어있는 오픈소스 내컴퓨터로 가져올때 명령어
1. 소스를 저장할 폴더 터미널에 지정
2. github에 찾고싶은 소스 검색하고 찾아들어가서 Fork 누르면 나의 레파지토리에 들어옴
3. 레파지토리에서 code 누르면 URL이 나온다.
* github에서 fork된 repository삭제하기, 깃허브 포크삭제 (https://wogus789789.tistory.com/139)

git branch 브랜치이름
> 작업디렉토리안에 작업상황을 브랜치이름을 지정하여 브랜치를 만듬

git branch
> 현재까지 지정하였던 브랜치목록을 보여주는 명령어

git checkout 지정했던브랜치이름
> 전에 지정했던 브랜치 작업상황으로 돌아가는 명령어

git log --all --graph --oneline
> 브랜치상황목록을 볼수 있는 명령어

git commit --amend
> 이미 commit되어진 commit이름을 수정할 수 있는 명령어, 수정하고 싶은 commit으로 시간여행이 되어있어야함

git merge 합칠브랜치이름
> 마스터브랜치와 합치고 싶은 다른 브랜치를 병합할때 사용하는 명령어

nano 파일명.확장자명
> 해당파일 내부 내용을 볼수 있는 명령어









---------------------------------------------
단축키
복사
> Ctrl + insert

붙여넣기
> Ctrl + insert
---------------------------------------------


