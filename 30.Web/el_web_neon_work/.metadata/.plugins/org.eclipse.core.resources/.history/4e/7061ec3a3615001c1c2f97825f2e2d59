package a.b.c.com.kbd.book.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import a.b.c.com.kbd.book.service.BookService;
import a.b.c.com.kbd.book.service.BookServiceImpl;
import a.b.c.com.kbd.book.vo.BookVO;

/**
 * Servlet implementation class BookController
 */
@WebServlet("/book")
public class BookController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
		throws ServletException, IOException {
		// TODO Auto-generated method stub
		
		request.setCharacterEncoding("EUC-KR");
		response.setCharacterEncoding("EUC-KR");
		response.setContentType("text/html; charset=EUC-KR");
		PrintWriter out = response.getWriter();
		
		String isudtype = request.getParameter("isudtype");
		if(isudtype !=null) isudtype.toUpperCase();
		
		if(isudtype !=null && isudtype.length() > 0){
		System.out.println("isudtype >>> : " + isudtype);
		System.out.println("remoteIP >>> : " + request.getRemoteAddr());
		System.out.println("method >>> : " + request.getMethod());
		
		// 도서 정보 전체 조회
		if("SALL".equals(isudtype)){
			System.out.println("도서 정보 전체 조회 isudtype >>> : " + isudtype);
			
			BookService bs = new BookServiceImpl();
			ArrayList<BookVO> aListAll = bs.bookSelectAll();
			
			if(aListAll !=null && aListAll.size() > 0) {
				
				request.setAttribute(aListAll, aListAll);
				RequestDispatcher rd = request.getRequestDispatcher("/kbd/book/bookSelectAll.jsp");
				rd.forward(request, response);
			
			}else{
				out.println("<script>");
				out.println("location.href='/testKbd/book?isudtype=SALL'");
				out.println("</script>");
			}
		}
		
		// 도서 정보 조건 조회 : S U D
		if("S".equals(isudtype) || "U".equals(isudtype) || "D".equals(isudtype)){
			System.out.println("도서 정보 조건 조회 : S U D isudtype >>> : " + isudtype);
			
			String bnum = request.getParameter("bnumCheck");
			if(bnum !=null && bnum.length() > 0){
				System.out.println("도서번호 >>> : " + bnum);
				
				BookService bs = new BookServiceImpl();
				BookVO bvo = null;
				bvo = new BookVO();
				bvo.setBnum(bnum);
				
				ArrayList<BookVO> aList = bs.bookSelect(bvo);
				
				if(aList !=null && aList.size() > 0){
					
					request.setAttribute("aList", aList);
					RequestDispatcher rd= request.getRequestDispatcher("/kbd/book/bookSelect.jsp");
					rd.forward(request, response);
					
				}else{
					out.println("<script>");
					out.println("location.href='/testKbd/book?isudtype=SALL'");
					out.println("</script>");
				}
			}else{
				System.out.println("도서번호가 없습니다. ");
			}
			
		}
		
		// 도서 수정
		if("UOK".equals(isudtype)){
			System.out.println("도서 정보 수정 isudtype >>> : " + isudtype);
			
			String bnum = request.getParameter("bnum");
			String bprice = request.getParameter("bprice");
			String bqty = request.getParameter("bqty");				
			System.out.println("bnum >>> : " + bnum);
			System.out.println("bprice >>> : " + bprice);
			System.out.println("bqty >>> : " + bqty);
			
			BookService bs = new BookServiceImpl();
			BookVO bvo = null;
			bvo = new BookVO();
			
			bvo.setBnum(bnum);
			bvo.setBprice(bprice);
			bvo.setBqty(bqty);
			
			int nCnt = bs.bookUpdate(bvo);
			
			if(nCnt > 0) {
				System.out.println("도서정보 " + nCnt + "건 수정 되었습니다.");
				request.setAttribute("nCnt", new Integer(nCnt);
				RequestDispatcher rd= request.getRequestDispatcher("/kbd/book/bookUpdate.jsp");
			}
			
		}
		}
		
		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
