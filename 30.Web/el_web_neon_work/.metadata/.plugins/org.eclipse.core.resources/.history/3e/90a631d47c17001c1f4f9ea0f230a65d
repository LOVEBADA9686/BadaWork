package a.b.c.com.kbd.mem.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import a.b.c.com.common.ConnProperty;
import a.b.c.com.kbd.mem.sql.MemberSqlMap;
import a.b.c.com.kbd.mem.vo.MemberVO;


public class MemberDAOImpl implements MemberDAO {

	@Override
	public ArrayList<MemberVO> memberSelectAll() {
		// TODO Auto-generated method stub
		System.out.println("MemberDAOImpl.memberSelectAll() 함수 진입");
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rsRs = null;]
		
		ArrayList<MemberVO> aList = null;
		
		try{
			
			conn = ConnProperty.getConnection();
			pstmt = conn.prepareStatement(MemberSqlMap.getMemberSelectAllQuery());
			
			System.out.println("전체조회 \n" + MemberSqlMap.getMemberSelectAllQuery());
			
			rsRs = pstmt.executeQuery();
			
			if(rsRs !=null){
				
				aList = new ArrayList<MemberVO>();
				
				while (rsRs.next()) {
					
					MemberVO _mvo = new MemberVO();
					
					_mvo.setMnum(rsRs.getString(1)); 
					_mvo.setMname(rsRs.getString(2)); 
					_mvo.setMid(rsRs.getString(3));
					_mvo.setMpw(rsRs.getString(4));
					_mvo.setMgender(rsRs.getString(5));
					_mvo.setMbirth(rsRs.getString(6));
					_mvo.setMhp(rsRs.getString(7));					
					_mvo.setMtel(rsRs.getString(8));
					_mvo.setMemail(rsRs.getString(9));					
					_mvo.setMzonecode(rsRs.getString(10));
					_mvo.setMroadaddress(rsRs.getString(11));
					_mvo.setMjibunaddress(rsRs.getString(12));					
					_mvo.setMhobby(rsRs.getString(13));
					_mvo.setMinfo(rsRs.getString(14));
					_mvo.setMphoto(rsRs.getString(15));					
					_mvo.setMadmin(rsRs.getString(16));
					_mvo.setDeleteyn(rsRs.getString(17));
					_mvo.setInsertdate(rsRs.getString(18));
					_mvo.setUpdatedate(rsRs.getString(19));
					
					aList.add(_mvo);
					MemberVO.printlnMemberVO(_mvo);					
				}
			}
			ConnProperty.conClose(conn, pstmt, rsRs);
		}catch(Exception e) {
			System.out.println("memberSelectAll() 함수에서 디비연결 또는 쿼리에서 문제가 생겼네요 >>> : " + e.getMessage());
		}finally{
			ConnProperty.conClose(conn, pstmt, rsRs);
		}
		
		return aList;
	}

	@Override
	public ArrayList<MemberVO> memberSelect(MemberVO mvo) {
		// TODO Auto-generated method stub
		System.out.println("MemberDAOImpl.memberSelect() 함수 진입");
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rsRs = null;
		
		ArrayList<MemberVO> aList = null;
		
		try{
			
			conn = ConnProperty.getConnection();
			pstmt = conn.prepareStatement(MemberSqlMap.getMemberSelectQuery());
			System.out.println("조건조희 \n" + MemberSqlMap.getMemberSelectQuery());
			
			pstmt.clearParameters();
			// 플레이스홀더에 바인딩한 변수를 세팅한다.
			pstmt.setString(1, mvo.getMnum());
			rsRs = pstmt.executeQuery();
			
			if(rsRs !=null){
				
				aList = new ArrayList<MemberVO>();
				
				while(rsRs.next()) {
					
					MemberVO _mvo = new MemberVO();
					
					_mvo.setMnum(rsRs.getString(1));
					_mvo.setMnum(rsRs.getString(2));
					_mvo.setMnum(rsRs.getString(3));
					_mvo.setMnum(rsRs.getString(4));
					_mvo.setMnum(rsRs.getString(5));
					_mvo.setMnum(rsRs.getString(6));
					_mvo.setMnum(rsRs.getString(7));
					_mvo.setMnum(rsRs.getString(8));
					_mvo.setMnum(rsRs.getString(9));
					_mvo.setMnum(rsRs.getString(10));
					_mvo.setMnum(rsRs.getString(11));
					_mvo.setMnum(rsRs.getString(12));
					_mvo.setMnum(rsRs.getString(13));
					_mvo.setMnum(rsRs.getString(14));
					_mvo.setMnum(rsRs.getString(15));
					_mvo.setMnum(rsRs.getString(16));
					_mvo.setMnum(rsRs.getString(17));
					_mvo.setMnum(rsRs.getString(18));
					_mvo.setMnum(rsRs.getString(19));
				}
			}
		}
		
		
		
		
		return null;
	}

	@Override
	public boolean memberInsert(MemberVO mvo) {
		// TODO Auto-generated method stub
		System.out.println("MemberDAOImpl memberInsert() 함수 진입 >>> : ");
		MemberVO.printlnMemberVO(mvo);
		
		//사용할 객체를 지역변수로 선언하고 초기화 하기
		Connection conn = null;
		PreparedStatement pstmt = null;
		int nCnt = 0;
		boolean bool = false;
		
		try{
			conn = ConnProperty.getConnection();
			System.out.println("conn.getAutoCommit() >>> : " + conn.getAutoCommit());;
			
			pstmt = conn.prepareStatement(MemberSqlMap.getMemberInsertQuery());
			System.out.println("입력하기 >>> : \n" + MemberSqlMap.getMemberInsertQuery());
			
			// 파라미터 클리어 꼭 하기
			pstmt.clearParameters();
			pstmt.setString(1, mvo.getMnum());
			pstmt.setString(2, mvo.getMname());
			pstmt.setString(3, mvo.getMid());
			pstmt.setString(4, mvo.getMpw());
			pstmt.setString(5, mvo.getMgender());
			pstmt.setString(6, mvo.getMbirth());
			pstmt.setString(7, mvo.getMhp());
			pstmt.setString(8, mvo.getMtel());
			pstmt.setString(9, mvo.getMemail());
			pstmt.setString(10, mvo.getMzonecode());
			pstmt.setString(11, mvo.getMroadaddress());
			pstmt.setString(12, mvo.getMjibunaddress());
			pstmt.setString(13, mvo.getMhobby());
			pstmt.setString(14, mvo.getMinfo());
			pstmt.setString(15, mvo.getMphoto());
			pstmt.setString(16, mvo.getMadmin());	
			
			nCnt = pstmt.executeUpdate();
			if (! conn.getAutoCommit()) conn.commit();
			
			System.out.println("nCnt >>> : " + nCnt + "건 등록 되었음");
			
			if(nCnt > 0){bool = true;}
			
			ConnProperty.conClose(conn, pstmt);
		}catch(Exception e) {
			System.out.println("입력 디비연동에 문제가 생겼습니다. >>> : " + e);
		}finally{
			try{
				ConnProperty.conClose(conn, pstmt);
			}catch(Exception e2) {}
		}
		return bool;
	}

	@Override
	public boolean memberUpdate(MemberVO mvo) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean memberDelete(MemberVO mvo) {
		// TODO Auto-generated method stub
		return false;
	}

}
